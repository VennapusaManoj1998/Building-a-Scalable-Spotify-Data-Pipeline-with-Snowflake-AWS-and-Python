CREATE STORAGE INTEGRATION my_s3_integration
  TYPE = EXTERNAL_STAGE
  ENABLED = TRUE
  STORAGE_PROVIDER = S3
  STORAGE_AWS_ROLE_ARN = 'arn:aws:iam::767398051997:role/snowflake-s3-connection'
  STORAGE_ALLOWED_LOCATIONS = ('s3://spotify-etl-project-snowflake');

DESC integration my_s3_integration;

-- Create or replace the stage with the correct URL and file format
CREATE OR REPLACE STAGE my_stage
  URL='s3://spotify-etl-project-snowflake/transformed_data/'
  STORAGE_INTEGRATION = my_s3_integration
  FILE_FORMAT = (TYPE = 'CSV' FIELD_OPTIONALLY_ENCLOSED_BY = '"' SKIP_HEADER = 1);

CREATE OR REPLACE FILE FORMAT csv_file_format
TYPE ='CSV'
FIELD_DELIMITER = ','
SKIP_HEADER = 1

create or replace TABLE ALBUMS (
	ALBUM_ID VARCHAR(100),
	ALBUM_NAME VARCHAR(100),
	RELEASE_DATE DATE,
	TOTAL_TRACKS NUMBER(38,0),
	URL VARCHAR(255)
);

create or replace TABLE ARTISTS (
	ARTIST_ID VARCHAR(100),
	ARTIST_NAME VARCHAR(100),
	EXTERNAL_URL VARCHAR(255)
);

create or replace TABLE SONGS (
	SONG_ID VARCHAR(100),
	SONG_NAME VARCHAR(100),
	DURATION_MS NUMBER(38,0),
	URL VARCHAR(255),
	POPULARITY NUMBER(38,0),
	SONG_ADDED DATE,
	ALBUM_ID VARCHAR(100),
	ARTIST_ID VARCHAR(100)
);

-- Assuming your table is named 'album_da

COPY INTO SPOTIFY_ETL_PIPELINE.PUBLIC.ALBUMS  
  FROM @my_stage/album_data
  FILE_FORMAT = (FORMAT_NAME= 'csv_file_format')
  ON_ERROR = 'CONTINUE';

SELECT * FROM SPOTIFY_ETL_PIPELINE.PUBLIC.ALBUMS;

-- Copy data into the ARTISTS table
COPY INTO SPOTIFY_ETL_PIPELINE.PUBLIC.ARTISTS
  FROM @my_stage/artist_data
  FILE_FORMAT = (FORMAT_NAME= 'csv_file_format')
  ON_ERROR = 'CONTINUE';

SELECT * FROM SPOTIFY_ETL_PIPELINE.PUBLIC.ARTISTS;


COPY INTO SPOTIFY_ETL_PIPELINE.PUBLIC.SONGS
  FROM @my_stage/songs_data
  FILE_FORMAT = (FORMAT_NAME= 'csv_file_format')
  ON_ERROR = 'CONTINUE';

SELECT * FROM SPOTIFY_ETL_PIPELINE.PUBLIC.SONGS;


-- Create a Snowflake pipe
CREATE OR REPLACE PIPE spotify_pipe_albums
AUTO_INGEST = TRUE
AS
COPY INTO SPOTIFY_ETL_PIPELINE.PUBLIC.ALBUMS
FROM @my_stage/album_data
FILE_FORMAT = (FORMAT_NAME= 'csv_file_format')
ON_ERROR = 'CONTINUE';

DESC pipe spotify_pipe_albums

CREATE OR REPLACE PIPE spotify_pipe_artists
AUTO_INGEST = TRUE
AS
COPY INTO SPOTIFY_ETL_PIPELINE.PUBLIC.ARTISTS
FROM @my_stage/artist_data
FILE_FORMAT = (FORMAT_NAME= 'csv_file_format')
ON_ERROR = 'CONTINUE';

DESC pipe spotify_pipe_artists

CREATE OR REPLACE PIPE spotify_pipe_songs
AUTO_INGEST = TRUE
AS
COPY INTO SPOTIFY_ETL_PIPELINE.PUBLIC.SONGS
FROM @my_stage/songs_data
FILE_FORMAT = (FORMAT_NAME= 'csv_file_format')
ON_ERROR = 'CONTINUE';

DESC pipe spotify_pipe_songs


SELECT * FROM SPOTIFY_ETL_PIPELINE.PUBLIC.ALBUMS;

SELECT * FROM SPOTIFY_ETL_PIPELINE.PUBLIC.ARTISTS;

SELECT * FROM SPOTIFY_ETL_PIPELINE.PUBLIC.SONGS;
